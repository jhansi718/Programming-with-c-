 
Program.No:. 
Develop a C++ program that demonstrates the use of function templates to create 
functions that can work with different data types. 
Program: 
#include <iostream> 
using namespace std; 
template<typename T>T myMax(T x,T y){ 
 return (x>y)?x:y; } 
template <typename T> 
void myswap(T &x,T &y){ 
 T temp=x; 
 x=y; 
 y=temp; } 
int main(){ 
 int a=10,b=20; 
 cout<<"Max of"<<a<<"and"<<b<<"is:"<<myMax(a,b)<<endl;             
 cout<<"Before swap:a="<<a<<",b="<<b<<endl; 
 myswap(a,b); 
 cout<<"After swap:a="<<a<<",b="<<b<<endl;; 
 cout<<"---------------"<<endl; 
 double x=5.5,y=2.3; 
 cout<<"Max of"<<x<<"and"<<y<<"is:"<<myMax(x,y)<<endl; 
 cout<<"Before swap:x="<<x<<",y="<<y<<endl;; 
 myswap(x,y); 
 cout<<"After swap:x="<<x<<",y="<<y<<endl;; 
 cout<<"---------------"<<endl; 
 char c1='A',c2='Z'; 
 cout<<"Max of"<<c1<<"and"<<c2<<"is:"<<myMax(c1,c2)<<endl; 
 cout<<"Before swap:c1="<<c1<<",c2="<<c2<<endl;; 
 myswap(c1,c2); 
 cout<<"After swap:c1="<<c1<<",cc2="<<b<<endl;; 
 cout<<"---------------"<<endl; 
 return 0; 
} 
    
 
 


Program.No:. 
Develop a C++ program that demonstrates template classes, which allow creating 
classes that can work with any data type 
Program: 
#include<iostream> 
using namespace std; 
  template<class T> 
  class calculator{ 
   private: 
    T num1,num2; 
   public: 
   calculator(T n1, T n2){ 
    num1=n1; 
    num2=n2; 
   }  
    
   T add(){ return num1+num2;} 
   T sub(){return num1-num2;} 
   T multiply(){return num1*num2;} 
   T divide(){ 
   if(num2!=0)return num1/num2; 
   else { 
    cout<<"error!not divisible by zero:"<<endl; 
    return 0; 
       } 
          } 
  }; 
  int main(){ 
   calculator<int>intcalc(10,5); 
   cout<<"int calculation:"<<endl; 
   cout<<"Addition:"<<intcalc.add()<<endl; 
   cout<<"Subtraction:"<<intcalc.sub()<<endl; 
   cout<<"Multiply:"<<intcalc.multiply()<<endl; 
   cout<<"Division:"<<intcalc.divide()<<endl; 
   cout<<"-------------------------"<<endl; 
        
   calculator<double>doublecalc(30.5,19.5); 
   cout<<"Double calculation:"<<endl; 
   cout<<"Addition:"<<doublecalc.add()<<endl; 
   cout<<"Subtraction:"<<doublecalc.sub()<<endl; 
   cout<<"Multiply:"<<doublecalc.multiply()<<endl; 
   cout<<"Division:"<<doublecalc.divide()<<endl; 
   cout<<"-------------------------"<<endl;     
  } 
 
 
 

