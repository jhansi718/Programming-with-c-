
Create a C++ program that demonstrates function overloading by defining multiple functions with the same name but different parameter types or coun
Program:
#include <iostream>
#include <string>
using namespace std;
void printDetails(string name, int rollNumber) {
    cout << "\nStudent Details:\n";
    cout << "Name: " << name << "\nRoll Number: " << rollNumber << endl;
}
void printDetails(string name, string subject) {
    cout << "\nTeacher Details:\n";
    cout << "Name: " << name << "\nSubject: " << subject << endl;
}
void printDetails(string courseName, float duration) {
    cout << "\nCourse Details:\n";
    cout << "Course Name: " << courseName << "\nDuration: " << duration << " months" << endl;
}
int main() {
    int choice;
    cout << "Select Option:\n";
    cout << "1. Print Student Details\n";
    cout << "2. Print Teacher Details\n";
    cout << "3. Print Course Details\n";
    cout << "Enter your choice (1-3): ";
    cin >> choice;
    cin.ignore();
    if (choice == 1) {
        string name;
        int roll;
        cout << "Enter Student Name: ";
        getline(cin, name);
        cout << "Enter Roll Number: ";
        cin >> roll;
        printDetails(name, roll);
    }
    else if (choice == 2) {
        string name, subject;
        cout << "Enter Teacher Name: ";
        getline(cin, name);
        cout << "Enter Subject: ";
        getline(cin, subject);
        printDetails(name, subject);
    }
    else if (choice == 3) {
        string course;
        float duration;
        cout << "Enter Course Name: ";
        getline(cin, course);
        

        cout << "Enter Duration (in months): ";
        cin >> duration;
        printDetails(course, duration);
    }
    else {
        cout << "Invalid Choice!" << endl;
    }
    return 0;
}










Program:
Develop a C++ program that illustrates the use of default arguments in functions.

Program:
#include <iostream>
using namespace std;
void greet(string name, string greeting = "Hello", int times = 1) {
    for (int i = 0; i < times; ++i) {
        cout << greeting << ", " << name << "!" << endl;
    }
}
int main() {
    string name, greeting;
    int choice, times;
    
    cout << "Enter your name: ";
    getline(cin, name);
    cout << "\nChoose Greeting Type:\n";
    cout << "1. Just Name (use default greeting and times)\n";
    cout << "2. Name and Custom Greeting (use default times)\n";
    cout << "3. Name, Custom Greeting, and Times\n";
    cout << "Enter your choice (1-3): ";
    cin >> choice;
    cin.ignore(); 
    if (choice == 1) {
        greet(name); 
    }
    else if (choice == 2) {
        cout << "Enter your custom greeting (e.g., Hi, Welcome, Good Morning): ";
        getline(cin, greeting);
        greet(name, greeting);  
    }
    else if (choice == 3) {
       

 cout << "Enter your custom greeting: ";
        getline(cin, greeting);
        cout << "How many times do you want the greeting? ";
        cin >> times;
        greet(name, greeting, times); 
    }
    else {
        cout << "Invalid choice!" << endl;
    }
 
    return 0;
}



 
 


Program:
Create a C++ program that uses a friend function to access the private data of a class

Program:
#include <iostream>
#include <string>
using namespace std;
class BankAccount {

private:
    string accountHolder;
    float balance;
public:
    BankAccount(string name, float amount) {
        accountHolder = name;
        balance = amount;
    }
    friend void showAccountDetails(BankAccount acc);
};
void showAccountDetails(BankAccount acc) {
    cout << "\n--- Account Details ---\n";
    cout << "Account Holder: " << acc.accountHolder << endl;
    cout << "Balance: ₹" << acc.balance << endl;
}
int main() {
    string name;
    float amount;
    cout << "Enter Account Holder Name: ";
    getline(cin, name);
    cout << "Enter Initial Balance: ₹";
   
 cin >> amount;
    BankAccount userAccount(name, amount);
    showAccountDetails(userAccount);
    return 0;
}

















