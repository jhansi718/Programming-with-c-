
Program.no:. 
Develop a C++ program that demonstrates how to use pointers to access and manipulate 
objects of a class. 
Program: 
#include<iostream> 
using namespace std; 
class student{ 
private: 
string name; 
int age; 
public: 
void setdata(string n,int a){ 
name=n; 
age=a; 
} 
void display(){ 
cout<<"Name:"<<name<<",Age:"<<age<<endl; 
} 
}; 
int main(){ 
student s1; 
s1.setdata("Dinesh",20); 
s1.display(); 
student*ptr; 
ptr=&s1; 
ptr->display(); 
student *ptr2=new student; 
ptr2->setdata("Charan",22); 
ptr2->display(); 
delete 
return 0; 
Output: 
ptr2; 
Name:Dinesh,Age:20 
Name:Charan,Age:22. 
} 



Program.no:. 
Develop a C++ program to demonstrate the concept of virtual base classes in the context of 
multiple inheritance, which resolves ambiguity in the inheritance hierarchy. 
Program: 
#include<iostream> 
using namespace std; 
class A{ 
public: 
A(){cout<<"A Constructor\n";} 
~A(){cout<<"A Destructor\n";} 
void show(){ 
cout<<"Function of class A\n";  
} 
}; class B: virtual public A{ 
public: 
B(){cout<<"B Constructor\n";} 
~B(){cout<<"B Destructor\n";} 
}; 
class C: virtual public A{ 
public: 
C(){cout<<"C Constructor\n";} 
~C(){cout<<"C Destructor\n";} 
}; 
class D: public B ,public C{ 
public: 
D(){cout<<"D Constructor\n";} 
~D(){cout<<"D Destructor\n";} 
}; 
int main(){ 
D obj; 
obj.show(); 
return 0;} 
